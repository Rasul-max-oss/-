import telebot
from telebot import types

bot = telebot.TeleBot("7779559381:AAFU-tFNw6Bdo7o2TiT3HEp2UD_CuycL084")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
user_carts = {}

# –°—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
burger_images = {
    "classic": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSDfPSOfNj6wVTYs3pvZQ4eMcLpgy_Fv0pXMA&s",
    "cheese": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTuO1B4d5FSW5C5ji6ltCWCWHwKWgFbk_8u7w&s",
    "veggie": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQTFz0Znuelzy2lrBkqnRH4ngD0LBxiv7_sHw&s"
}


@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã")
    btn2 = types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞ üõí")
    markup.add(btn1, btn2)

    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω.",
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã")
def show_categories(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ë—É—Ä–≥–µ—Ä—ã üçî")
    btn2 = types.KeyboardButton("–ü–∏—Ü—Ü–∞ üçï")
    btn3 = types.KeyboardButton("–ù–∞–ø–∏—Ç–∫–∏ ü•§")
    btn4 = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ë—É—Ä–≥–µ—Ä—ã üçî")
def show_burgers(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –±—É—Ä–≥–µ—Ä
    markup1 = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="burger_classic")
    markup1.add(btn1)
    bot.send_photo(message.chat.id, burger_images["classic"],
                   caption="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±—É—Ä–≥–µ—Ä üçî\n–¶–µ–Ω–∞: 300‚ÇΩ",
                   reply_markup=markup1)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π –±—É—Ä–≥–µ—Ä
    markup2 = types.InlineKeyboardMarkup()
    btn2 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="burger_cheese")
    markup2.add(btn2)
    bot.send_photo(message.chat.id, burger_images["cheese"],
                   caption="–ß–∏–∑–±—É—Ä–≥–µ—Ä üßÄüçî\n–¶–µ–Ω–∞: 350‚ÇΩ",
                   reply_markup=markup2)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç–∏–π –±—É—Ä–≥–µ—Ä
    markup3 = types.InlineKeyboardMarkup()
    btn3 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="burger_veggie")
    markup3.add(btn3)
    bot.send_photo(message.chat.id, burger_images["veggie"],
                   caption="–í–µ–≥ –±—É—Ä–≥–µ—Ä ü•óüçî\n–¶–µ–Ω–∞: 320‚ÇΩ",
                   reply_markup=markup3)


@bot.callback_query_handler(func=lambda call: call.data.startswith("burger_"))
def add_to_cart(call):
    user_id = call.from_user.id

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if user_id not in user_carts:
        user_carts[user_id] = []

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–∏—Ç—å
    if call.data == "burger_classic":
        item = {"name": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±—É—Ä–≥–µ—Ä üçî", "price": 300}
    elif call.data == "burger_cheese":
        item = {"name": "–ß–∏–∑–±—É—Ä–≥–µ—Ä ÔøΩüçî", "price": 350}
    elif call.data == "burger_veggie":
        item = {"name": "–í–µ–≥ –±—É—Ä–≥–µ—Ä ü•óüçî", "price": 320}

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
    user_carts[user_id].append(item)

    bot.answer_callback_query(call.id, f"{item['name']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")


@bot.message_handler(func=lambda message: message.text == "–ö–æ—Ä–∑–∏–Ω–∞ üõí")
def show_cart(message):
    user_id = message.from_user.id

    if user_id not in user_carts or len(user_carts[user_id]) == 0:
        bot.send_message(message.chat.id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
        return

    cart_text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n"
    total = 0

    for item in user_carts[user_id]:
        cart_text += f"{item['name']} - {item['price']}‚ÇΩ\n"
        total += item['price']

    cart_text += f"\n–ò—Ç–æ–≥–æ: {total}‚ÇΩ"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
    btn2 = types.KeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
    btn3 = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
    markup.add(btn1, btn2, btn3)

    bot.send_message(message.chat.id, cart_text, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
def clear_cart(message):
    user_id = message.from_user.id
    user_carts[user_id] = []
    bot.send_message(message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞")


@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ üîô")
def back_to_main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã")
    btn2 = types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞ üõí")
    markup.add(btn1, btn2)

    bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)


bot.polling()